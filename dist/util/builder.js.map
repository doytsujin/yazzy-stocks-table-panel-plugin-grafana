{"version":3,"sources":["../../src/util/builder.js"],"names":["_","Builder","options","seriesList","cols","groupedSeries","groupBy","bind","_shortName","map","rowSeries","shortName","name","cells","_cellsFor","series","rowsNameComponents","nameComponentsRows","split","components","target","nc","parseInt","join","columnsNameComponents","nameComponentsColumns","columns","Array","from","Set","label","nodes","i","length","push","n","v","names","rowSeriesList","col","columnSeries","filter","match","_trendForColumn","trends","_trendPoint","datapoints","points","basePoint","trendPoint","point","sort","a","b","Math","sign","e"],"mappings":";;;;;;;;;;;;;;;AAAOA,O;;;;;;;;;;;;;;;;;;;;;yBAEMC,O;AACX,yBAAaC,OAAb,EAAsB;AAAA;;AACpB,eAAKA,OAAL,GAAeA,OAAf;AACD;;;;iCAEiC;AAAA;;AAAA,gBAA5BC,UAA4B,uEAAf,EAAe;AAAA,gBAAXC,IAAW,uEAAJ,EAAI;;AAChC,gBAAIC,gBAAgBL,EAAEM,OAAF,CAAUH,UAAV,EAAsBH,EAAEO,IAAF,CAAO,KAAKC,UAAZ,EAAwB,IAAxB,CAAtB,CAApB;AACA;;;;AAIA,mBAAOR,EAAES,GAAF,CAAMJ,aAAN,EAAqB,UAACK,SAAD,EAAYC,SAAZ,EAA0B;AACpD,qBAAO,EAAEC,MAAMD,SAAR,EAAmBE,OAAO,MAAKC,SAAL,CAAeJ,SAAf,EAA0BN,IAA1B,CAA1B,EAAP;AACD,aAFM,CAAP;AAGD;;;qCAEWW,M,EAAQ;AAClB,gBAAIC,qBAAqB,KAAKd,OAAL,CAAae,kBAAb,CAAgCC,KAAhC,CAAsC,GAAtC,CAAzB;AACA,gBAAIC,aAAaJ,OAAOK,MAAP,CAAcF,KAAd,CAAoB,GAApB,CAAjB;AACA,mBAAOlB,EAAES,GAAF,CAAMO,kBAAN,EAA0B,UAACK,EAAD;AAAA,qBAAQF,WAAWG,SAASD,EAAT,CAAX,CAAR;AAAA,aAA1B,EAA4DE,IAA5D,CAAiE,GAAjE,CAAP;AACD;;;iCAEsB;AAAA,gBAAjBpB,UAAiB,uEAAJ,EAAI;;AACrB;;;AAGA,gBAAIqB,wBAAwB,KAAKtB,OAAL,CAAauB,qBAAb,CAAmCP,KAAnC,CAAyC,GAAzC,CAA5B;AACA,gBAAIQ,UAAU1B,EAAES,GAAF,CAAMN,UAAN,EAAkB,UAACY,MAAD,EAAY;AAC1C,kBAAII,aAAaJ,OAAOK,MAAP,CAAcF,KAAd,CAAoB,GAApB,CAAjB;AACA,qBAAOlB,EAAES,GAAF,CAAMe,qBAAN,EAA6B,UAACH,EAAD;AAAA,uBAAQF,WAAWG,SAASD,EAAT,CAAX,CAAR;AAAA,eAA7B,EAA+DE,IAA/D,CAAoE,GAApE,CAAP;AACD,aAHa,CAAd;AAIAG,sBAAUC,MAAMC,IAAN,CAAW,IAAIC,GAAJ,CAAQH,OAAR,CAAX,CAAV;AACA,mBAAO1B,EAAES,GAAF,CAAMiB,OAAN,EAAe,UAACI,KAAD,EAAW;AAC/B,kBAAIC,QAAQ,EAAZ;AACA,kBAAIZ,aAAaW,MAAMZ,KAAN,CAAY,GAAZ,CAAjB;AACA,mBAAK,IAAIc,IAAI,CAAb,EAAgBA,IAAIR,sBAAsBS,MAA1C,EAAkDD,GAAlD,EAAuD;AACrDD,sBAAMG,IAAN,CAAW,EAACC,GAAGX,sBAAsBQ,CAAtB,CAAJ,EAA8BI,GAAGjB,WAAWa,CAAX,CAAjC,EAAX;AACD;AACD,qBAAO;AACLD,uBAAOA,KADF;AAELnB,sBAAMkB;AAFD,eAAP;AAID,aAVM,CAAP;AAWD;;;wCAE6B;AAAA,gBAAjB3B,UAAiB,uEAAJ,EAAI;;AAC5B,gBAAIa,qBAAqB,KAAKd,OAAL,CAAae,kBAAb,CAAgCC,KAAhC,CAAsC,GAAtC,CAAzB;AACA,gBAAImB,QAAQrC,EAAES,GAAF,CAAMN,UAAN,EAAkB,UAACY,MAAD,EAAY;AACxC,kBAAII,aAAaJ,OAAOK,MAAP,CAAcF,KAAd,CAAoB,GAApB,CAAjB;AACA,qBAAOlB,EAAES,GAAF,CAAMO,kBAAN,EAA0B,UAACK,EAAD;AAAA,uBAAQF,WAAWG,SAASD,EAAT,CAAX,CAAR;AAAA,eAA1B,EAA4DE,IAA5D,CAAiE,GAAjE,CAAP;AACD,aAHW,CAAZ;AAIA,mBAAOI,MAAMC,IAAN,CAAW,IAAIC,GAAJ,CAAQQ,KAAR,CAAX,CAAP;AACD;;;oCAEUC,a,EAAelC,I,EAAM;AAAA;;AAC9B,mBAAOJ,EAAES,GAAF,CAAML,IAAN,EAAY,UAACmC,GAAD,EAAS;AAC1B,kBAAIC,eAAexC,EAAEyC,MAAF,CAASH,aAAT,EAAwB,UAAC5B,SAAD,EAAe;AACxD,oBAAIS,aAAaT,UAAUU,MAAV,CAAiBF,KAAjB,CAAuB,GAAvB,CAAjB;AACA,oBAAIwB,QAAQ,IAAZ;AACA,qBAAK,IAAIV,IAAI,CAAb,EAAgBA,IAAIO,IAAIR,KAAJ,CAAUE,MAA9B,EAAsCD,GAAtC,EAA2C;AACzC,sBAAIX,KAAKkB,IAAIR,KAAJ,CAAUC,CAAV,EAAaG,CAAtB;AACA,sBAAIhB,WAAWE,EAAX,MAAmBkB,IAAIR,KAAJ,CAAUC,CAAV,EAAaI,CAApC,EAAuC;AACrCM,4BAAQ,KAAR;AACA;AACD;AACF;AACD,uBAAOA,KAAP;AACD,eAXkB,CAAnB;AAYA,qBAAO,OAAKC,eAAL,CAAqBH,YAArB,CAAP;AACD,aAdM,CAAP;AAeD;;;0CAEgBrC,U,EAAY;AAAA;;AAC3B,gBAAIyC,SAASzC,WAAWM,GAAX,CAAe,UAACM,MAAD;AAAA,qBAAY,OAAK8B,WAAL,CAAiB9B,OAAO+B,UAAxB,CAAZ;AAAA,aAAf,CAAb;AACA,mBAAOF,OAAOX,MAAP,GAAgB,CAAhB,GAAoBW,OAAO,CAAP,CAApB,GAAgC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAAvC;AACD;;;sCAEYG,M,EAAQ;AACnB,gBAAIC,SAAJ;AACA,gBAAIC,UAAJ;AACAF,qBAAS/C,EAAEyC,MAAF,CAASM,MAAT,EAAiB;AAAA,qBAASG,MAAM,CAAN,KAAY,IAArB;AAAA,aAAjB,CAAT;AACA,gBAAIH,OAAOd,MAAP,KAAkB,CAAtB,EAAyB,OAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAAP;AACzB;AACAc,mBAAOI,IAAP,CAAY,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAUD,EAAE,CAAF,IAAOC,EAAE,CAAF,CAAjB;AAAA,aAAZ;AACAL,wBAAYD,OAAO,CAAP,CAAZ;AACA;AACAE,yBAAaF,OAAOA,OAAOd,MAAP,GAAgB,CAAvB,CAAb;AACA;AACAgB,uBAAW,CAAX,IAAgBK,KAAKC,IAAL,CAAUN,WAAW,CAAX,IAAgBD,UAAU,CAAV,CAA1B,CAAhB;;AAEA,gBAAIC,WAAW,CAAX,IAAgB,CAApB,EAAuB;AACrBA,yBAAW,CAAX,IAAgBK,KAAKC,IAAL,CAAUR,OAAON,MAAP,CAAc,UAACe,CAAD;AAAA,uBAAOA,EAAE,CAAF,IAAOP,WAAW,CAAX,CAAd;AAAA,eAAd,EAA2ChB,MAArD,CAAhB;AACAgB,yBAAW,CAAX,IAAgBK,KAAKC,IAAL,CAAUR,OAAON,MAAP,CAAc,UAACe,CAAD;AAAA,uBAAOA,EAAE,CAAF,IAAOR,UAAU,CAAV,CAAd;AAAA,eAAd,EAA0Cf,MAApD,CAAhB;AACD,aAHD,MAGO,IAAIgB,WAAW,CAAX,IAAgB,CAApB,EAAuB;AAC5BA,yBAAW,CAAX,IAAgBK,KAAKC,IAAL,CAAUR,OAAON,MAAP,CAAc,UAACe,CAAD;AAAA,uBAAOA,EAAE,CAAF,IAAOR,UAAU,CAAV,CAAd;AAAA,eAAd,EAA0Cf,MAApD,CAAhB;AACAgB,yBAAW,CAAX,IAAgBK,KAAKC,IAAL,CAAUR,OAAON,MAAP,CAAc,UAACe,CAAD;AAAA,uBAAOA,EAAE,CAAF,IAAOP,WAAW,CAAX,CAAd;AAAA,eAAd,EAA2ChB,MAArD,CAAhB;AACD,aAHM,MAGA;AACLgB,yBAAW,CAAX,IAAgBK,KAAKC,IAAL,CAAUR,OAAON,MAAP,CAAc,UAACe,CAAD;AAAA,uBAAOA,EAAE,CAAF,IAAOR,UAAU,CAAV,CAAd;AAAA,eAAd,EAA0Cf,MAApD,CAAhB;AACAgB,yBAAW,CAAX,IAAgBK,KAAKC,IAAL,CAAUR,OAAON,MAAP,CAAc,UAACe,CAAD;AAAA,uBAAOA,EAAE,CAAF,IAAOR,UAAU,CAAV,CAAd;AAAA,eAAd,EAA0Cf,MAApD,CAAhB;AACD;AACD,mBAAOgB,UAAP;AACD","file":"builder.js","sourcesContent":["import _ from 'lodash'\n\nexport class Builder {\n  constructor (options) {\n    this.options = options\n  }\n\n  call (seriesList = [], cols = []) {\n    var groupedSeries = _.groupBy(seriesList, _.bind(this._shortName, this))\n    /*\n      {airflow-temperature-cel:[0:{datapoints:[],target:'node.alpha.smart.SAMSUNG_S07GJ10Y768586.airflow-temperature-cel.raw'},1:{}],command-timeout:[],}\n    */\n\n    return _.map(groupedSeries, (rowSeries, shortName) => {\n      return { name: shortName, cells: this._cellsFor(rowSeries, cols) }\n    })\n  }\n\n  _shortName (series) {\n    var rowsNameComponents = this.options.nameComponentsRows.split(',')\n    var components = series.target.split('.')\n    return _.map(rowsNameComponents, (nc) => components[parseInt(nc)]).join('.')\n  }\n\n  cols (seriesList = []) {\n    /*\n      [0:{datapoints:[],target:'node.alpha.smart.SAMSUNG_S07GJ10Y768586.airflow-temperature-cel.raw'},1:{}]\n    */\n    var columnsNameComponents = this.options.nameComponentsColumns.split(',')\n    var columns = _.map(seriesList, (series) => {\n      var components = series.target.split('.')\n      return _.map(columnsNameComponents, (nc) => components[parseInt(nc)]).join('.')\n    })\n    columns = Array.from(new Set(columns))\n    return _.map(columns, (label) => {\n      var nodes = []\n      var components = label.split('.')\n      for (var i = 0; i < columnsNameComponents.length; i++) {\n        nodes.push({n: columnsNameComponents[i], v: components[i]})\n      }\n      return {\n        nodes: nodes,\n        name: label\n      }\n    })\n  }\n\n  getRowNames (seriesList = []) {\n    var rowsNameComponents = this.options.nameComponentsRows.split(',')\n    var names = _.map(seriesList, (series) => {\n      var components = series.target.split('.')\n      return _.map(rowsNameComponents, (nc) => components[parseInt(nc)]).join('.')\n    })\n    return Array.from(new Set(names))\n  }\n\n  _cellsFor (rowSeriesList, cols) {\n    return _.map(cols, (col) => {\n      var columnSeries = _.filter(rowSeriesList, (rowSeries) => {\n        var components = rowSeries.target.split('.')\n        var match = true\n        for (var i = 0; i < col.nodes.length; i++) {\n          var nc = col.nodes[i].n\n          if (components[nc] !== col.nodes[i].v) {\n            match = false\n            break\n          }\n        }\n        return match\n      })\n      return this._trendForColumn(columnSeries)\n    })\n  }\n\n  _trendForColumn (seriesList) {\n    var trends = seriesList.map((series) => this._trendPoint(series.datapoints))\n    return trends.length > 0 ? trends[0] : [null, null, null, null, null]\n  }\n\n  _trendPoint (points) {\n    var basePoint\n    var trendPoint\n    points = _.filter(points, point => point[0] != null)\n    if (points.length === 0) return [null, null, null, null, null]\n    // sort by timestamp\n    points.sort((a, b) => a[1] - b[1])\n    basePoint = points[0]\n    // we are interested in the last point\n    trendPoint = points[points.length - 1]\n    // save trending sign in [2]\n    trendPoint[2] = Math.sign(trendPoint[0] - basePoint[0])\n\n    if (trendPoint[2] < 0) {\n      trendPoint[3] = Math.sign(points.filter((e) => e[0] < trendPoint[0]).length)\n      trendPoint[4] = Math.sign(points.filter((e) => e[0] > basePoint[0]).length)\n    } else if (trendPoint[2] > 0) {\n      trendPoint[3] = Math.sign(points.filter((e) => e[0] < basePoint[0]).length)\n      trendPoint[4] = Math.sign(points.filter((e) => e[0] > trendPoint[0]).length)\n    } else {\n      trendPoint[3] = Math.sign(points.filter((e) => e[0] < basePoint[0]).length)\n      trendPoint[4] = Math.sign(points.filter((e) => e[0] > basePoint[0]).length)\n    }\n    return trendPoint\n  }\n}\n"]}