{"version":3,"sources":["../src/module.js"],"names":["_","kbn","fileExport","MetricsPanelCtrl","Builder","Sorter","Exporter","panelDefaults","defaultColor","decimals","nameComponentsRows","nameComponentsColumns","globalFormat","globalDecimals","rowspec","sortColumn","sortMultiplier","topLeftLabel","Ctrl","$scope","$injector","defaults","panel","events","on","onInitEditMode","bind","onDataReceived","onRender","onInitPanelActions","builder","sorter","exporter","rows","addEditorTab","unitFormats","getUnitFormats","rowNames","getRowNames","seriesList","render","cols","call","sort","opt","options","actions","push","text","click","match","format","higherBetter","index","splice","value","toggle","colindex","row","i","length","name","RegExp","slice","spec","getCellSpec","valueFormats","icon","saveSaveBlob","trend","isMini","c","val","s","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["import _ from 'lodash'\nimport kbn from 'app/core/utils/kbn'\nimport * as fileExport from 'app/core/utils/file_export'\nimport {MetricsPanelCtrl} from 'app/plugins/sdk'\nimport {Builder} from './util/builder'\nimport {Sorter} from './util/sorter'\nimport {Exporter} from './util/exporter'\n\nconst panelDefaults = {\n  defaultColor: 'rgb(117, 117, 117)',\n  decimals: 2,\n  nameComponentsRows: '1,2',\n  nameComponentsColumns: '3,4',\n  globalFormat: 'none',\n  globalDecimals: 0,\n  rowspec: [],\n  sortColumn: -1,\n  // sortRow: -1,\n  sortMultiplier: 1,\n  topLeftLabel: 'Name'\n}\n\nclass Ctrl extends MetricsPanelCtrl {\n  constructor ($scope, $injector) {\n    super($scope, $injector)\n    _.defaults(this.panel, panelDefaults)\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this))\n    this.events.on('data-received', this.onDataReceived.bind(this))\n    this.events.on('render', this.onRender.bind(this))\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this))\n\n    this.builder = new Builder(this.panel)\n    this.sorter = new Sorter(this.panel)\n    this.exporter = new Exporter(this.panel.rowspec) // TODO\n    this.rows = []\n  }\n\n  onInitEditMode () {\n    this.addEditorTab('Options', 'public/plugins/yazzy-stocks-table-panel/editor.html')\n    this.unitFormats = kbn.getUnitFormats()\n    this.rowNames = this.builder.getRowNames(this.seriesList) // TODO\n  }\n\n  onDataReceived (seriesList) {\n    this.seriesList = seriesList\n    this.render()\n  }\n\n  onRender () {\n    this.cols = this.builder.cols(this.seriesList)\n    this.rows = this.builder.call(this.seriesList, this.cols)\n    this.rows = this.sorter.sort(this.rows)\n  }\n\n  getOpt (opt) {\n    return this.builder.options[opt]\n  }\n\n  onInitPanelActions (actions) {\n    actions.push({text: 'Export CSV', click: 'ctrl.exportCSV()'})\n  }\n\n  onEditorAddRowspecClick () {\n    this.panel.rowspec.push({ match: '/.*/', format: 'none', higherBetter: false, decimals: 2 })\n    this.render()\n  }\n\n  onEditorRemoveRowspecClick (index) {\n    this.panel.rowspec.splice(index, 1)\n    this.render()\n  }\n\n  onEditorFormatSelect (format, rowspec) {\n    rowspec.format = format.value\n    this.render()\n  }\n\n  onEditorGlobalFormatSelect (format) {\n    this.panel.globalFormat = format.value\n    this.render()\n  }\n\n  onColumnClick (index) {\n    this.sorter.toggle(index)\n    this.render()\n  }\n\n  onRowClick (index) {\n    // TODO sort row\n  }\n\n  getCellSpec (colindex, row) {\n    for (var i = 0; i < this.panel.rowspec.length; i++) {\n      var rowspec = this.panel.rowspec[i]\n      if ((rowspec.match[0] === '/' && row.name.match(new RegExp(rowspec.match.slice(1, -1)))) || (rowspec.match === row.name)) {\n        return rowspec\n      }\n    }\n    return null\n  }\n\n  format (value, colindex, row) {\n    var format = this.panel.globalFormat\n    var decimals = this.panel.globalDecimals\n    var spec = this.getCellSpec(colindex, row)\n    if (spec !== null) {\n      format = spec.format\n      decimals = spec.decimals\n    }\n    return kbn.valueFormats[format](value, decimals, null)\n    // TODO time duration decimals\n  }\n\n  sortIcon (index) {\n    return this.sorter.icon(index)\n  }\n\n  exportCSV () {\n    fileExport.saveSaveBlob(this.exporter.call(this.rows), 'grafana_data_export')\n  }\n\n  trendColor (trend, isMini, row) {\n    var c\n    var spec = this.getCellSpec(-1 /* TODO colindex */, row)\n    var higherBetter = false\n    if (spec !== null) {\n      higherBetter = spec.higherBetter\n    }\n\n    if ((higherBetter && trend < 0) || (!higherBetter && trend > 0)) {\n      if (isMini) {\n        c = 'darkred'\n      } else {\n        c = 'red'\n      }\n    } else if ((higherBetter && trend > 0) || (!higherBetter && trend < 0)) {\n      if (isMini) {\n        c = 'green'\n      } else {\n        c = 'lime'\n      }\n    } else {\n      if (isMini) {\n        c = 'transparent'\n      } else {\n        // c = 'dimgray'\n        c = 'darkcyan'\n      }\n    }\n    return c\n  }\n\n  trendIcon (val, trend, isMini) {\n    var s = ''\n    if (val == null) {\n      if (isMini) {\n        s = '◆'\n      }\n    } else {\n      if (trend < 0) {\n        s = '▼'\n      } else if (trend > 0) {\n        s = '▲'\n      } else {\n        s = '◼'\n      }\n    }\n    return s\n  }\n}\n\nCtrl.templateUrl = 'module.html'\nexport { Ctrl as PanelCtrl }\n"]}